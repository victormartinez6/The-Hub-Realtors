rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isSuperAdmin() {
      return isAuthenticated() && getUserData().role == 'super_admin';
    }

    function isBroker() {
      return isAuthenticated() && getUserData().role == 'broker';
    }

    function isRealtor() {
      return isAuthenticated() && getUserData().role == 'realtor';
    }

    function isPartner() {
      return isAuthenticated() && getUserData().role == 'partner';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isBrokerOfRealtor(realtorId) {
      let realtorData = get(/databases/$(database)/documents/users/$(realtorId)).data;
      return isAuthenticated() && realtorData.brokerId == request.auth.uid;
    }

    // Regras para coleção users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isSuperAdmin();
      allow update: if isSuperAdmin() || isOwner(userId);
      allow delete: if isSuperAdmin();
    }

    // Regras para coleção leads
    match /leads/{leadId} {
      // Super Admin pode fazer tudo
      allow read, write: if isSuperAdmin();
      
      // Broker pode ler/escrever seus próprios leads e de seus realtors
      allow read, write: if isBroker() && (
        resource.data.brokerId == request.auth.uid || 
        resource.data.createdBy == request.auth.uid
      );
      
      // Realtor pode ler/escrever apenas seus próprios leads
      allow read, write: if isRealtor() && 
        resource.data.createdBy == request.auth.uid;
      
      // Parceiro pode apenas ler leads compartilhados com ele
      allow read: if isPartner() && 
        resource.data.partnersAccess.hasAny([request.auth.uid]);
    }

    // Regras para coleção brokers
    match /brokers/{brokerId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
      allow update: if isBroker() && isOwner(brokerId);
    }

    // Regras para coleção realtors
    match /realtors/{realtorId} {
      allow read: if isAuthenticated();
      allow create: if isSuperAdmin() || isBroker();
      allow update: if isSuperAdmin() || 
        isBroker() && resource.data.brokerId == request.auth.uid ||
        isOwner(realtorId);
      allow delete: if isSuperAdmin() || 
        isBroker() && resource.data.brokerId == request.auth.uid;
    }
  }
}
